// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Advogado {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  email      String    @unique
  password   String    @db.VarChar(255)
  nome       String?
  nascimento DateTime?
  role       Role      @default(USER)

  // Soft delete
  isActive Boolean @default(true)

  // Relacionamento com clientes
  clientes Cliente[]

  // Relacionamento com modelos de texto
  modelosTexto ModeloTexto[]
}

enum Role {
  USER
  ADMIN
}

model Cliente {
  id          Int     @id @default(autoincrement())
  nome        String
  tipo        Tipo    @default(FISICA)
  cpf         String?
  cnpj        String?
  nascimento  String?
  nomeMae     String?
  nomePai     String?
  conjuge     String?
  estadoCivil String?

  // TODO: Adicionar o restante dos campos de cliente

  // Soft delete
  isActive Boolean @default(true)

  // Relacionamento com advogados
  advogado   Advogado @relation(fields: [advogadoId], references: [id])
  advogadoId Int
}

enum Tipo {
  FISICA
  JURIDICA
}

model ModeloTexto {
  id     Int    @id @default(autoincrement())
  titulo String
  texto  String

  // TODO: Adicionar o restante dos campos do modelo

  // Soft delete
  isActive Boolean @default(true)

  // Relacionamento com advogados
  advogado   Advogado @relation(fields: [advogadoId], references: [id])
  advogadoId Int

  // Relacionamento com tags
  tags Tag[] @relation("ModeloTextoTags")
}

model Tag {
  id      Int           @id @default(autoincrement())
  nome    String        @unique
  modelos ModeloTexto[] @relation("ModeloTextoTags")
}
